cmake_minimum_required(VERSION 3.7)
project(MSR_original)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_C_FLAGS  "${CMAKE_C_FLAGS} -Wall -Wno-write-strings")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-write-strings")
#SET(CMAKE_C_COMPILER  g++)
AUX_SOURCE_DIRECTORY(. SRC_LIST)
ADD_EXECUTABLE(MSR_original ${SRC_LIST})
FIND_PATH(FFTW3PATH fftw3.h)
IF(FFTW3PATH)
    INCLUDE_DIRECTORIES(${FFTW3PATH})
    MESSAGE(STATUS "fftw3 path: ${FFTW3PATH}")
ELSE(FFTW3PATH)
    MESSAGE(FATAL_ERROR "fftw3 lib not found")
ENDIF(FFTW3PATH)
FIND_PACKAGE(OpenCV REQUIRED)
IF(OpenCV_FOUND)
    MESSAGE(STATUS "OpenCV library status:")
    MESSAGE(STATUS "    version: ${OpenCV_VERSION}")
    MESSAGE(STATUS "    libraries: ${OpenCV_LIBS}")
    MESSAGE(STATUS "    include path: ${OpenCV_INCLUDE_DIRS}")
    INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})
    TARGET_LINK_LIBRARIES(MSR_original ${OpenCV_LIBS})
ELSE(OpenCV_FOUND)
    MESSAGE(FATAL_ERROR "OpenCV not found")
ENDIF(OpenCV_FOUND)
INCLUDE_DIRECTORIES(/usr/include/png)
TARGET_LINK_LIBRARIES(MSR_original fftw3 png)

